<UserControl x:Class="JsonTool.Views.JsonView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:w="clr-namespace:JsonTool.Converters"
             xmlns:jc="clr-namespace:JsonTool.Converters.Json"
             xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
             xmlns:avalonedit="http://icsharpcode.net/sharpdevelop/avalonedit"
             xmlns:behaviour="clr-namespace:JsonTool.Behaviours"
             xmlns:jlinq="clr-namespace:Newtonsoft.Json.Linq;assembly=Newtonsoft.Json"
             xmlns:Ai="clr-namespace:JsonTool.Controls"
             mc:Ignorable="d"  x:Name="jsonView" Loaded="jsonView_Loaded"  Unloaded="jsonView_Unloaded"
             d:DesignHeight="450" d:DesignWidth="800" Background="#F2F2F2">
    <UserControl.Resources>

        <ResourceDictionary>
            <!--<ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/zdhsys;component/zdhsys.JsonTool/Themes/TreeView.xaml"/>
            </ResourceDictionary.MergedDictionaries>-->
            <Style TargetType="TreeView" BasedOn="{StaticResource TreeViewDefault01}"/>
            <Style TargetType="TreeViewItem" BasedOn="{StaticResource TreeViewItemDefault01}"/>
            
            <jc:JObjectToChildren x:Key="JObjectToChildren"></jc:JObjectToChildren>
            <jc:JPropertyToChildren x:Key="JPropertyToChildren"></jc:JPropertyToChildren>
            <jc:JPropertyNameToString x:Key="JPropertyNameToString"></jc:JPropertyNameToString>
            <jc:JPropertyValueToString x:Key="JPropertyValueToString"></jc:JPropertyValueToString>
            <jc:BoolToJsonSyntaxHighliting x:Key="TrueToHighliting"></jc:BoolToJsonSyntaxHighliting>
            <w:MethodToValueConverter x:Key="MethodToValueConverter"/>
            <w:NegateBoolean x:Key="NegateBoolean"/>
            <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>

            <HierarchicalDataTemplate DataType="{x:Type jlinq:JArray}" ItemsSource="{Binding Converter={StaticResource MethodToValueConverter}, ConverterParameter='Children'}">
                <TextBlock Text="Array">
                </TextBlock>
            </HierarchicalDataTemplate>
            <HierarchicalDataTemplate DataType="{x:Type jlinq:JProperty}" ItemsSource="{Binding Converter={StaticResource JPropertyToChildren}}">
                <StackPanel Orientation="Horizontal">
                    <StackPanel.ContextMenu>
                        <ContextMenu>
                            <MenuItem Header="Edit value" CommandParameter="{Binding}"
                                      Command="{Binding DataContext.EditValueFromJPropertyCommand, Source={x:Reference jsonView}}" />
                            <Separator></Separator>
                            <MenuItem Header="Copy value" CommandParameter="{Binding}"
                                      Command="{Binding  DataContext.CopyValueFromJPropertyCommand, Source={x:Reference jsonView}}" />
                            <MenuItem Header="Copy name" CommandParameter="{Binding}"
                                      Command="{Binding  DataContext.CopyNameFromJPropertyCommand, Source={x:Reference jsonView}}" />
                        </ContextMenu>
                    </StackPanel.ContextMenu>
                    <TextBlock Foreground="Blue" Text="{Binding Converter={StaticResource JPropertyNameToString}}"/>
                    <TextBlock Foreground="Blue" Text=" : "/>
                    <TextBlock  Text="{Binding Converter={StaticResource JPropertyValueToString}}"/>
                </StackPanel>
            </HierarchicalDataTemplate>
            <HierarchicalDataTemplate DataType="{x:Type jlinq:JObject}" ItemsSource="{Binding Converter={StaticResource JObjectToChildren}}">
                <TextBlock Text="{Binding Path=Path}"></TextBlock>
            </HierarchicalDataTemplate>

            <!--<HierarchicalDataTemplate DataType="{x:Type jlinq:JConstructor}" ItemsSource="{Binding Converter={StaticResource MethodToValueConverter}, ConverterParameter='Children'}">
                <TextBlock Text="Constructor">
                </TextBlock>
            </HierarchicalDataTemplate>
            <HierarchicalDataTemplate DataType="{x:Type jlinq:JRaw}" ItemsSource="{Binding Converter={StaticResource MethodToValueConverter}, ConverterParameter='Children'}">
                <TextBlock Text="Raw">
                </TextBlock>
            </HierarchicalDataTemplate>-->
            <!--<DataTemplate DataType="{x:Type jlinq:JValue}">
                <StackPanel Orientation="Horizontal">
                    <TextBlock Text="Value: "/>
                    <TextBox Text="{Binding Path=Value, Mode=TwoWay}"/>
                </StackPanel>
            </DataTemplate>-->
        </ResourceDictionary>
    </UserControl.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition/>
        </Grid.RowDefinitions>
        <!--<Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>-->
       
        <ToolBarPanel Grid.Row="0"  Grid.ColumnSpan="2">
            <ToolBarTray IsLocked="True">
                <!--<ToolBar Height="26" Visibility="{Binding ElementName=jsonView, Path=ShowFileToolBar, Converter={StaticResource BooleanToVisibilityConverter}}">
                    <Ai:AiButton x:Name="btnConnect" ToolTip="新建" Margin="10,1,10,0" Width="14" Command="{Binding NewCommand}"
                                 Style="{DynamicResource ButtonPath}" PathData="{DynamicResource NewDocument}" PathColor="{DynamicResource BtnBlueBackground}" />

                    <Ai:AiButton x:Name="btnOpen" ToolTip="打开"  Margin="0,0,10,0" Width="14" Command="{Binding OpenFileCommand}"
                                 Style="{DynamicResource ButtonPath}" PathData="{DynamicResource OpenFile}"  PathColor="{DynamicResource BtnBlueBackground}" />

                    <Ai:AiButton x:Name="btnSave" ToolTip="保存" Margin="0,1,10,0" Width="14" Command="{Binding SaveCommand}"
                                 Style="{DynamicResource ButtonPath}" PathData="{DynamicResource Save}" PathColor="{DynamicResource BtnBlueBackground}" />
                </ToolBar>-->
                <ToolBar>
                    <Separator Margin="0,0,10,0" Height="18" Visibility="{Binding ElementName=jsonView, Path=ShowFileToolBar, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                    <Ai:AiButton x:Name="btnFormat" ToolTip="格式化" Margin="0,1,10,0" Width="14" Command="{Binding JsoFormatCommand}"
                                 Style="{DynamicResource ButtonPath}" PathData="{DynamicResource Icon_Format}" PathColor="{DynamicResource BtnBlueBackground}" />

                    <!--<Ai:AiButton x:Name="btnCompress" ToolTip="压缩" Margin="0,1,10,0" Width="14" Command="{Binding JsonCompactCommand}"
                                 Style="{DynamicResource ButtonPath}" PathData="{DynamicResource Icon_Compact}" PathColor="{DynamicResource BtnBlueBackground}" />-->
                </ToolBar>
                <!--<ToolBar>
                    <Separator Margin="0,0,10,0" Height="18"/>
                    <TextBlock Text="生成类模型：" VerticalAlignment="Center"/>
                    <ComboBox x:Name="cmbLanguage" Width="120" DisplayMemberPath="DisplayName" VerticalAlignment="Center"/>
                    <Button x:Name="btnGenerate" Content="生成" VerticalAlignment="Center" VerticalContentAlignment="Center" Padding="0" Height="20" MinWidth="60" Margin="10,0,0,0" Click="btnGenerate_Click" />
                </ToolBar>-->
            </ToolBarTray>
           
        </ToolBarPanel>

        <avalonedit:TextEditor Grid.Row="1" x:Name="jsonEditor" IsReadOnly="False" VerticalScrollBarVisibility="Auto"  VerticalAlignment="Stretch" Margin="0,0,5,0"
                                  SyntaxHighlighting="{Binding IsEditMode, Converter={StaticResource TrueToHighliting}}" HorizontalScrollBarVisibility="Auto" LostKeyboardFocus="jsonEditor_LostKeyboardFocus"                     
                                  IsEnabled="{Binding IsBusy, Converter={StaticResource NegateBoolean}}" ShowLineNumbers="True"  FontFamily="Consola" LostFocus="jsonEditor_LostFocus">
            <i:Interaction.Behaviors>
                <behaviour:AvalonEditBehaviour GiveMeTheText="{Binding JsonString, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
            </i:Interaction.Behaviors>
        </avalonedit:TextEditor>

        <!--<Grid Grid.Row="1" Grid.Column="1" Background="White"  Margin="5,0,0,0">
            <TreeView Name="treeView1"  VirtualizingStackPanel.IsVirtualizing="False" ItemsSource="{Binding JsonList}"  BorderThickness="0" Style="{StaticResource TreeViewDefault01}" />
        </Grid>-->


    </Grid>
</UserControl>
